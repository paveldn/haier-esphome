substitutions:
  device_name: Haier AC
  device_id: haier_climate
  uart_id: ac_port 

esphome:
  name: haier
  name_add_mac_suffix: true

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_FREERTOS_UNICORE: y

external_components:
  source:
    type: local
    path: ./components

uart:
  baud_rate: 9600
  tx_pin: 17
  rx_pin: 16
  id: ${uart_id}  
    
logger:
  level: DEBUG
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
    
api:

ota:

climate:
  - platform: haier
    id: ${device_id}
    name: ${device_name} 
    uart_id: ${uart_id}
    wifi_signal: true           # Optional, default true, enables WiFI signal transmission from ESP to AC
    beeper: true                # Optional, default true, disables beep on commands from ESP
    outdoor_temperature:        # Optional, outdoor temperature sensor
      name: ${device_name} outdoor temperature
    visual:                     # Optional, you can use it to limit min and max temperatures in UI (not working for remote!)
      min_temperature: 16 °C
      max_temperature: 30 °C
      temperature_step: 1 °C
    supported_swing_modes:      # Optional, can be used to disable some swing modes if your AC does not support it
    - 'OFF'
    - VERTICAL
    - HORIZONTAL
    - BOTH

switch:
  - platform: template
    id: ${device_id}_display_switch
    name: ${device_name} display
    icon: mdi:led-on
    entity_category: config
    lambda: |-
      return id(${device_id}).get_display_state();
    turn_on_action:
      climate.haier.display_on: ${device_id}
    turn_off_action:
      climate.haier.display_off: ${device_id}
  - platform: template
    id: ${device_id}_beeper_switch
    entity_category: config
    name: ${device_name} beeper
    icon: mdi:volume-high
    lambda: |-
      return id(${device_id}).get_beeper_state();
    turn_on_action:
      climate.haier.beeper_on: ${device_id}
    turn_off_action:
      climate.haier.beeper_off: ${device_id}
  - platform: restart
    name: ${device_name} restart

select:
    # Vertical airflow direction setting. Works only if the vertical swing is off
    # You can remove this control if you don't need it
  - platform: template
    id: ${device_id}_vertical_direction
    name: ${device_name} airflow vertical
    entity_category: config
    icon: mdi:arrow-expand-vertical
    optimistic: true
    restore_value: true
    initial_option: Center 
    options:
      - Up
      - Center
      - Down
    on_value:
      then:
        - climate.haier.set_vertical_airflow:
           id: ${device_id}
           vertical_airflow: !lambda |-
             return esphome::haier::AirflowVerticalDirection(i);
    # Horizontal airflow direction setting. Works only if the horizontal swing is off
    # You can remove this control if you don't need it
  - platform: template
    id: ${device_id}_horizontal_direction
    name: ${device_name} airflow horizontal
    entity_category: config
    icon: mdi:arrow-expand-horizontal
    optimistic: true
    restore_value: true
    initial_option: Center 
    options:
      - Left
      - Center
      - Right
    on_value:
      then:
        - climate.haier.set_horizontal_airflow:
           id: ${device_id}
           horizontal_airflow: !lambda |-
             return esphome::haier::AirflowHorizontalDirection(i);
